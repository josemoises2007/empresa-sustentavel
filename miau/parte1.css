@import url('https://fonts.googleapis.com/css2?family=Lobster&family=Roboto:wght@400;700&display=swap');

:root {
  --font-one: 'Lobster', cursive;
  --font-two: 'Roboto', sans-serif;
  --default-font: 'Arial', sans-serif;
  --bg-color: #f0f0f0;
  --column-bg: rgba(255, 255, 255, 0.1);
  --column-border: rgba(255, 255, 255, 0.3);
  --column-shadow: rgba(0, 0, 0, 0.1);
  --text-color: #fff;
  --highlight-color: #00ffcc;
  --h2-font: 'Poppins', sans-serif;
  --h2-color: #aaffee;
  --h2-size: 2rem;
  --p-font: 'Playfair Display', serif;
  --p-size: 1.2rem;
  --p-color: #e0e0e0;
}

.font-one {
  font-family: var(--font-one);
}

.font-two {
  font-family: var(--font-two);
}

.parte2 {
  font-family: var(--default-font);
  margin: 0;
  padding: 0;
  
  overflow: hidden;
}

.pantalla {
  object-fit: cover;
  width: 100vw;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
  z-index: -2;
}

.container {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  padding: 20px;
  height: 100vh;
  align-items: center;
}

.column {
  flex: 1 1 45%;
  margin: 10px;
  padding: 20px;
  background: var(--column-bg);
  backdrop-filter: blur(15px);
  border-radius: 15px;
  box-shadow: 0 4px 30px var(--column-shadow);
  border: 1px solid var(--column-border);
  color: var(--text-color);
  text-align: center;
}

.column h2 {
  font-family: var(--h2-font);
  font-weight: 200;
  font-size: var(--h2-size);
  color: var(--h2-color);
}

.column p {
  font-family: var(--p-font);
  font-size: var(--p-size);
  color: var(--p-color);
}

.column.full-width {
  flex: 1 1 100%;
}

.video-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.6);
  z-index: -1;
}

.neon-text {
  font-family: var(--default-font);
  color: var(--text-color);
  text-align: center;
  text-shadow: 
    0 0 5px var(--highlight-color),
    0 0 10px var(--highlight-color),
    0 0 15px var(--highlight-color),
    0 0 20px var(--highlight-color),
    0 0 25px var(--highlight-color),
    0 0 30px var(--highlight-color),
    0 0 35px var(--highlight-color);
}

details summary {
  cursor: pointer;
  transition: margin 150ms ease-out;
}

details[open] summary {
  margin-bottom: 10px;
}

.faq {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.question {
  background: var(--column-bg);
  border-radius: 10px;
  padding: 15px;
  box-shadow: 0 4px 6px var(--column-shadow);
  transition: all 0.3s ease;
  cursor: pointer;
}

.question[open] {
  background: rgba(255, 255, 255, 0.2);
}

.question summary {
  font-size: 18px;
  font-weight: bold;
  margin: 0;
  outline: none;
  list-style: none;
  cursor: pointer;
  transition: all 0.2s ease;
}

.question summary::-webkit-details-marker {
  display: none;
}

.answer {
  overflow: hidden;
  max-height: 0;
  transition: max-height 0.5s ease-out, padding 0.5s ease-out;
}

.question[open] .answer {
  max-height: 500px;
  padding: 10px 0;
}

@media screen and (max-width: 600px) {
  .faq-container {
    width: 90%;
    padding: 15px;
  }

  .faq {
    gap: 5px;
  }

  .question {
    padding: 12px;
  }

  .question summary {
    font-size: 16px;
  }
}
.column{
  animation: slit-in-vertical linear both;
  animation-timeline: view(block);
  animation-range: cover 0% cover 50%;
}
@keyframes slit-in-vertical {
  0% {
    -webkit-transform: translateZ(-800px) rotateY(90deg);
            transform: translateZ(-800px) rotateY(90deg);
    opacity: 0;
  }
  54% {
    -webkit-transform: translateZ(-160px) rotateY(87deg);
            transform: translateZ(-160px) rotateY(87deg);
    opacity: 1;
  }
  100% {
    -webkit-transform: translateZ(0) rotateY(0);
            transform: translateZ(0) rotateY(0);
  }
}
